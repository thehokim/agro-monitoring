name: Blue-Green Deploy Project2

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: self-hosted

    steps:
    # 1. –ö–ª–æ–Ω –∫–æ–¥–∞
    - name: üì¶ Checkout code
      uses: actions/checkout@v3

    # 2. ==== MinIO ============================================================
    - name: üèóÔ∏è  Ensure MinIO is up-to-date
      run: |
        set -eu
        # –æ–±—Ä–∞–∑ –≤—Å–µ–≥–¥–∞ —Å–≤–µ–∂–∏–π
        docker pull quay.io/minio/minio:latest

        # –µ—Å–ª–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –Ω–µ—Ç ‚Äì —Å–æ–∑–¥–∞—ë–º;
        # –µ—Å–ª–∏ –µ—Å—Ç—å, –Ω–æ –æ–±—Ä–∞–∑ –æ–±–Ω–æ–≤–∏–ª—Å—è ‚Äì –ø–µ—Ä–µ—Å–æ–∑–¥–∞—ë–º
        if ! docker ps --format '{{.Names}}' | grep -q '^minio$'; then
          echo "‚Üí (Re)creating MinIO container"
          docker rm -f minio 2>/dev/null || true
          docker run -d --name minio --restart unless-stopped \
            -p 9000:9000 -p 9001:9001 \
            -e MINIO_ROOT_USER="${{ secrets.MINIO_ROOT_USER }}" \
            -e MINIO_ROOT_PASSWORD="${{ secrets.MINIO_ROOT_PASSWORD }}" \
            -v /opt/minio/data:/data \
            quay.io/minio/minio:latest server /data --console-address ':9001'
        fi
    # -------------------------------------------------------------------------

    # 3. –°–±–æ—Ä–∫–∞ –∏ push –æ–±—Ä–∞–∑–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    - name: üõ† Build Docker image
      run: docker build -t thehokim/project2:latest .

    - name: üöÄ Push Docker image
      run: |
        echo "${{ secrets.DOCKER_PASSWORD }}" | \
          docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
        docker push thehokim/project2:latest

    # 4. –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –∫–∞–∫–∞—è –ø–æ–¥—Å–∏—Å—Ç–µ–º–∞ (blue / green) —Å–µ–π—á–∞—Å –∂–∏–≤–∞
    - name: üîç Determine active version
      id: active
      run: |
        if docker ps --format '{{.Names}}' | grep -q '^project2_blue$'; then
          echo "ACTIVE=blue" >>"$GITHUB_ENV"
        else
          echo "ACTIVE=green" >>"$GITHUB_ENV"
        fi

    # 5. –ü–æ–¥–Ω–∏–º–∞–µ–º –Ω–æ–≤—É—é —Ä–µ–≤–∏–∑–∏—é
    - name: üöÄ Run new container
      run: |
        set -eu
        echo "üëâ Active is: ${{ env.ACTIVE }}"
        if [ "${{ env.ACTIVE }}" = "blue" ]; then
          docker rm -f project2_green || true
          docker run -d --name project2_green \
            --add-host=host.docker.internal:host-gateway \
            -e MINIO_ENDPOINT=http://192.168.20.30:9000 \
            -p 8201:8080 thehokim/project2:latest
        else
          docker rm -f project2_blue || true
          docker run -d --name project2_blue \
            --add-host=host.docker.internal:host-gateway \
            -e MINIO_ENDPOINT=http://192.168.20.30:9000 \
            -p 8202:8080 thehokim/project2:latest
        fi

    # 6. –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º NGINX
    - name: üîÅ Switch NGINX config
      run: |
        if [ "${{ env.ACTIVE }}" = "blue" ]; then
          sudo sed -i 's/server 127.0.0.1:8201;/# server 127.0.0.1:8201;\nserver 127.0.0.1:8202;/' \
            /etc/nginx/sites-available/project2.conf
        else
          sudo sed -i 's/server 127.0.0.1:8202;/# server 127.0.0.1:8202;\nserver 127.0.0.1:8201;/' \
            /etc/nginx/sites-available/project2.conf
        fi
        sudo systemctl reload nginx

    # 7. –ß–∏—Å—Ç–∏–º —Å—Ç–∞—Ä—É—é —Ä–µ–≤–∏–∑–∏—é
    - name: üßπ Remove old container
      run: |
        if [ "${{ env.ACTIVE }}" = "blue" ]; then
          docker stop project2_blue && docker rm project2_blue || true
        else
          docker stop project2_green && docker rm project2_green || true
        fi
